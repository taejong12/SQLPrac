/*SELECT colume1, colume2,...
FROM table_name
;*/

--SELECTION * 해당 테이블에서 전체 내용을 가져온다
SELECT * 
FROM EMP;

--PROJECTION 컬럼명 해당 컬럼만 가져온다
SELECT EMPNO,ENAME 
FROM EMP;

--DISTINCT 중복된 부분이 없어진다 ,는 컬럼 분리 구분 가능
SELECT DISTINCT JOB,deptno 
FROM EMP;

--COUNT() 갯수 확인
SELECT COUNT(DISTINCT JOB) 
FROM EMP;

--(DISTINCT JOB)AS JOBCOUNT 가로안에 있는 이름을 뒤에 적은 이름으로 대체(이름이 길거나 내가 편하게 쓰고 싶은 닉네임을 정해서 사용할 수도 있다. AS는 생략 가능)
SELECT COUNT(DISTINCT JOB)AS JOBCOUNT 
FROM EMP;

--COUNT(*) 전체 데이터 갯수 확인
SELECT COUNT(*) 
FROM EMP;

--SELECT선택 FROM어디로부터 WHERE 무엇을 가져올건가
SELECT * 
FROM EMP 
WHERE DEPTNO=30;

--문자열 숫자열 둘 다 비교 가능 WHERE절 뒤에는 조건절 별도의 연산자들이 존재
/* OPERATOR WHERE 뒤에 오는 연산자들
= 같다
> GT 보다 크다 GREATER THAN
< LT 보다 작다LESS THAN
>= <= 
!=, <> 같지 않다
BETWEEN 범위를 지정
LIKE 패턴 검색
IN 포함여부
AND 둘 다 참
OR 둘 중의 하나이상 참
NOT 반대

SELECT * FROM TB WHERE 조건 AND 조건2 AND 조건3...;
SELECT * FROM TB WHERE 조건 OR 조건2 OR 조건3...;
SELECT * FROM TB WHERE 조건 OR 조건2 AND 조건3...;(섞어서 사용가능)
SELECT * FROM TB WHERE NOT 조건;

*/

SELECT * 
FROM EMP 
WHERE JOB='SALESMAN';

SELECT * 
FROM EMP 
WHERE JOB='CLERK' 
    AND DEPTNO=20;

SELECT * 
FROM EMP
WHERE JOB='CLERK' 
    OR DEPTNO=20;

SELECT * 
FROM EMP 
WHERE NOT JOB='CLERK';

--영업직 중 부서가 20이 아닌 사람들
SELECT * 
FROM EMP 
WHERE JOB='SALESMAN' 
    AND NOT DEPTNO=20;
    
SELECT EMPNO, ENAME 
FROM EMP 
WHERE JOB='SALESMAN'
    AND NOT DEPTNO=20;

/*
    +,-,*,/
*/

--순서 ASC 증가 DESC 감소
SELECT *
FROM EMP
WHERE SAL>=(1000*10-100)/10
ORDER BY SAL ASC;

SELECT *
FROM EMP
WHERE SAL>=(1000*10-100)/10
ORDER BY SAL DESC;

--앞에 DEPTNO 순서 먼저 다음 HIREDATE 순서
SELECT * FROM EMP
ORDER BY DEPTNO,HIREDATE;

SELECT * FROM EMP
ORDER BY DEPTNO DESC,HIREDATE ASC;

--최대 최소
SELECT MAX(SAL) , MIN(SAL) FROM EMP;

--평균
SELECT AVG(SAL) FROM EMP
WHERE JOB='SALESMAN';

--합계
SELECT SUM(SAL) FROM EMP
WHERE JOB='SALESMAN';

SELECT COUNT(*) AS COUNTNAME
    ,SUM(SAL) AS SUMNAME
    ,AVG(SAL) AS AVGNAME
FROM EMP
WHERE JOB='SALESMAN';

/*
SELECT COL
FROM TB
WHERE COL IN (VAL1, VAL2,...)
*/

--IN 포함된 숫자 출력, 속도의 차이가 있다(조건절 AND와 같다)
SELECT * FROM EMP
WHERE DEPTNO IN(10,5,4,20,100);

SELECT * FROM EMP
WHERE DEPTNO NOT IN(10,5,4,20,100);

/*
    BETWEEN VAL1 AND VAL2
    SELECT COL FROM TB
    WHERE COL BETWEEN VAL1 AND VAL2;
*/

--BETWEEN 사이 값 출력
SELECT * FROM EMP
WHERE SAL BETWEEN 1000 AND 2000;

SELECT * FROM EMP
WHERE SAL NOT BETWEEN 1000 AND 2000;

SELECT * FROM EMP
WHERE SAL NOT BETWEEN 1000 AND 2000
    AND DEPTNO NOT IN(10,20);
    
SELECT * FROM EMP
WHERE ENAME BETWEEN 'A' AND 'K';

--날짜도 사용 가능
SELECT * FROM EMP
WHERE HIREDATE BETWEEN '1981-01-01' AND '1981-06-06';

/*
    WILDCARDS
    %   0~여러개 대체하는 문자 A%(시작하는게 A다)
    _   한개 문자 대체    _K_    
    []  표현 문자의 집합  C[AB]D (A도 되고 B도 된다)
    ^   제외            C[^AB]D (A나 B 제외 나머지 올 수 있음) 
    -   범위            C[A-D]D (A~D까지 올 수 있음)
    
    LIKE
     -해당하는 패턴에 맞는 애들을 보여주는 것
     
    SELECT COL FROM TB
    WHERE COL LIKE PATTERN;
*/

SELECT * FROM EMP
WHERE ENAME LIKE 'M%';

--%M% M이 포함될 문자 다 나옴
SELECT * FROM EMP
WHERE ENAME LIKE '%M%';

-- _ N뒤에 무조건 하나라도 있는 것
SELECT * FROM EMP
WHERE ENAME LIKE '%N_%';

SELECT '우리집'||'으로'||'가자'
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')
    ,TO_CHAR(SYSDATE,'YYYY-MM-DD')
    ,TO_CHAR(SYSDATE, 'YYYY/MM/DD')
    ,TO_CHAR(SYSDATE, 'YYYY')
    ,TO_CHAR(SYSDATE,'MM')
    ,TO_CHAR(SYSDATE,'MON')
    ,TO_CHAR(SYSDATE,'D')
    ,TO_CHAR(SYSDATE,'DD')
    ,TO_CHAR(SYSDATE,'DDD')
    ,TO_CHAR(SYSDATE,'DAY')
    ,TO_CHAR(SYSDATE,'HH24')
    ,TO_CHAR(SYSDATE,'HH:MI:SS')
FROM DUAL;
    
--COMMENT ON COLUMN(명령어) SCOTT.EMP.EMPNO(계정.테이블.컬럼(열)) IS '커맨트(적고자 하는것)';
COMMENT ON COLUMN SCOTT.EMP.EMPNO IS '사원번호';
COMMENT ON COLUMN SCOTT.EMP.ENAME IS '사원이름';
COMMENT ON COLUMN SCOTT.EMP.JOB IS '사원직책';
COMMENT ON COLUMN SCOTT.EMP.MGR IS '직속 상관의 사원번호';
COMMENT ON COLUMN SCOTT.EMP.HIREDATE IS '입사일';
COMMENT ON COLUMN SCOTT.EMP.SAL IS '급여';
COMMENT ON COLUMN SCOTT.EMP.COMM IS '급여 외 추가 수당';
COMMENT ON COLUMN SCOTT.EMP.DEPTNO IS '사원의 부서번호';

COMMENT ON COLUMN SCOTT.BONUS.ENAME IS '사원이름';L
COMMENT ON COLUMN SCOTT.BONUS.JOB IS '사원직책';
COMMENT ON COLUMN SCOTT.BONUS.SAL IS '급여';
COMMENT ON COLUMN SCOTT.BONUS.COMM IS '급여 외 추가 수당';

COMMENT ON COLUMN SCOTT.DEPT.DEPTNO IS '부서 번호';
COMMENT ON COLUMN SCOTT.DEPT.DNAME IS '부서이름';
COMMENT ON COLUMN SCOTT.DEPT.LOC IS '부서 위치 지역';

COMMENT ON COLUMN SCOTT.SALGRADE.GRADE IS '등급';
COMMENT ON COLUMN SCOTT.SALGRADE.LOSAL IS '로스알';
COMMENT ON COLUMN SCOTT.SALGRADE.HISAL IS '히살';

