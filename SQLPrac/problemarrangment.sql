--P125 5장 Q1
SELECT *
FROM EMP
WHERE ENAME LIKE '%S';

--Q2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO=30
    AND JOB='SALESMAN';

--Q3    
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO IN(20, 30)
    AND SAL>2000;
    
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROm EMP
WHERE (DEPTNO=20 OR DEPTNO=30)
    AND SAL>2000;
    
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO=20
    AND SAL>2000
UNION
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO=30
    AND SAL>2000;
    
--Q4    
SELECT *
FROM EMP
WHERE SAL<2000 OR SAL>3000;

SELECT *
FROM EMP
WHERE SAL NOT BETWEEN 2000 AND 3000;

--Q5
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE ENAME LIKE '%E%'
    AND DEPTNO=30
    AND SAL NOT BETWEEN 1000 AND 2000;

--Q6
SELECT *
FROM EMP
WHERE COMM IS NULL
    AND MGR IS NOT NULL
    AND (JOB='MANAGER'
    OR JOB='CLERK')
    AND ENAME NOT LIKE '_L%';
    
SELECT *
FROM EMP
WHERE COMM IS NULL
    AND MGR IS NOT NULL
    AND JOB IN('MANAGER','CLERK')
    AND ENAME NOT LIKE '_L%';  





--P174 6장 Q1    
SELECT EMPNO
    ,RPAD(SUBSTR(EMPNO,1,2),LENGTH(EMPNO),'*') AS MASKING_EMPNO
    ,ENAME 
    ,RPAD(SUBSTR(ENAME,1,1),LENGTH(ENAME),'*') AS MASKING_ENAME 
FROM EMP
WHERE LENGTH(ENAME)>=5 
    AND LENGTH(ENAME)<6;
  
--Q2  
SELECT EMPNO, ENAME, SAL
    , TRUNC((SAL/21.5),2) AS DAY_PAY
    , ROUND(((SAL/21.5)/8),1) AS TIME_PAY
FROM EMP;

--Q3
SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD') AS HIREDATE
    ,TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3), '월요일'),'YYYY-MM-DD') AS R_JOB,
    CASE 
        WHEN COMM IS NULL THEN 'N/A'
--      WHEN COMM>0 THEN  ''||COMM
        WHEN COMM>0 THEN  TO_CHAR(COMM)
        END AS COMM
FROM EMP;

--Q4
--SELECT EMPNO, ENAME,
--    CASE
--        WHEN MGR IS NULL THEN ' '
--        ELSE TO_CHAR(MGR)
--        END AS MGR,
--    CASE
--        WHEN MGR IS NULL THEN 0000
--        WHEN SUBSTR(MGR,1,2)=75 THEN 5555
--        WHEN SUBSTR(MGR,1,2)=76 THEN 6666
--        WHEN SUBSTR(MGR,1,2)=77 THEN 7777
--        WHEN SUBSTR(MGR,1,2)=78 THEN 8888
--    ELSE MGR
--    END AS CHG_MGR
--FROM EMP;

SELECT EMPNO, ENAME,
    CASE
        WHEN MGR IS NULL THEN ' '
        ELSE TO_CHAR(MGR)
        END AS MGR,
    CASE
        WHEN MGR IS NULL THEN '0000'
        WHEN MGR LIKE '75%' THEN '5555'
        WHEN MGR LIKE '76%' THEN '6666'
        WHEN MGR LIKE '77%' THEN '7777'
        WHEN MGR LIKE '78%' THEN '8888'
    ELSE ''||MGR
    END AS CHG_MGR
FROM EMP;




--지정한 부서번호,부서명,사원이름 및 지정한 사원과 동일한 부서에서 근무하는 모든 사원을
--표시하도록 질의를 작성하고 부서번호는 department, 사원이름은 employee, 동일한
--부서에서 근무하는 사원은 colleague로 표시하시오.
--(부서번호, 사원이름,동료 순으로 오름차순 정렬)


--SELECT D.DEPTNO AS department
--    ,D.DNAME AS DPARTMENT
--    ,E.ENAME AS employee
--    ,E.DEPTNO AS DEPTNO
--    ,colleague
--FROM(SELECT E.ENAME AS colleague
--        ,E.SAL AS SALARY
--    FROM EMP E, DEPT D
--    WHERE E.DEPTNO=D.DEPTNO
--    AND D.DNAME='SALES')
--WHERE E.JOB='CLERK'
--ORDER BY department, employee, colleague;

SELECT B.DEPTNO AS department,
    B.DNAME,
    A.ENAME AS employee,
    A.DEPTNO,
    C.ENAME AS colleague
   
FROM EMP A
    ,DEPT B
    ,EMP C  
    
WHERE  A.DEPTNO=B.DEPTNO
    AND A.DEPTNO=C.DEPTNO
    AND NOT A.ENAME=C.ENAME
    
ORDER BY department, employee, colleague;


--SELECT E.DEPTNO AS DEPARTMENT,
--        D.DNAME AS DPARTMENT,
--        E.ENAME AS EMPLOYEE,
--        C.DEPTNO AS DEPTNO,
--        C.ENAME AS COLLEAGUE
--        
--FROM EMP E,
--        DEPT D,
--        EMP C
--WHERE E.DEPTNO=D.DEPTNO AND E.DEPTNO=C.DEPTNO AND NOT E.ENAME=C.ENAME
--ORDER BY DEPARTMENT,EMPLOYEE,COLLEAGUE;

--P174 6장 Q1
--EMPNO열
--EMP테이블
--ENAME>=5 <6 사원정보출력
--MASKING_EMPNO 열
--EMPNO 앞 두자리 외* 출력
--MASKING_ENAME 열 사원이름의 첫 글자만 보여주고 나머지 *
SELECT EMPNO
    ,RPAD(SUBSTR(EMPNO,1,2),LENGTH(EMPNO),'*') AS MASKING_EMPNO
    ,ENAME
    ,RPAD(SUBSTR(ENAME,1,1),LENGTH(ENAME),'*') AS MASKING_ENAME
FROM EMP
WHERE LENGTH(ENAME)>=5
    AND LENGTH(ENAME)<6;

SELECT EMPNO
    ,RPAD(SUBSTR(EMPNO,1,2),4,'*') AS MASKING_EMPNO
    ,ENAME
    ,RPAD(SUBSTR(ENAME,1,1),LENGTH(ENAME),'*') AS MASKING_ENAME
FROM EMP
WHERE LENGTH(ENAME)>=5
    AND LENGTH(ENAME)<6;

--Q2
--EMP 테이블
--사원들의 월 평균 근무일 21.5
--하루 근무 시간 8
--하루 급여 DAY_PAY
--시급 TIME_PAY
--단 하루 급여는 소수점 세 번째 자리에서 버리고, 시급은 두 번째 소수점에서 반올림하세요

SELECT EMPNO, ENAME, SAL
    ,TRUNC(SAL/21.5, 2) AS DAY_PAY
    ,ROUND((SAL/21.5)/8,1) AS TIME_PAY
FROM EMP;

SELECT EMPNO,ENAME,SAL
    ,TRUNC(SAL/21.5,2) AS DAY_PAY
    ,ROUND(SAL/21.5/8,1) AS TIME_PAY
FROM EMP;

--Q3
--EMP 테이블
--HIREDATE을 기준으로 3개월이 지난 후 첫 월요일에 정직원이 되는 날짜(R_JOB)를 YYYY-MM-DD 형식 출력
--단 추가 수당(COMM)이 없는 사원이 추가 수당은 N/A로 출력

SELECT EMPNO, ENAME, TO_CHAR(HIREDATE,'YYYY/MM/DD') AS HIREDATE
    , TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3),'월요일'), 'YYYY-MM-DD') AS R_JOB
    , CASE
        WHEN COMM IS NULL THEN 'N/A'
        ELSE TO_CHAR(COMM)
        END AS COMM
FROM EMP;

SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD') AS HIREDATE
    ,TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3),'월요일'), 'YYYY-MM-DD') AS R_JOB
    ,NVL(TO_CHAR(COMM), 'N/A') AS COMM
FROM EMP;
DESC EMP;
--Q4
SELECT EMPNO, 
    ENAME,
--    CASE
--        WHEN MGR IS NULL THEN ' '
--        ELSE TO_CHAR(MGR)
--    END AS MGR,
--NVL(TO_CHAR(MGR),' ') AS MGR,
    NVL2(MGR,TO_CHAR(MGR),' ') AS MGR,    
    CASE
        WHEN MGR IS NULL THEN '0000'
        WHEN SUBSTR(MGR,1,2)=75 THEN '5555'
        WHEN SUBSTR(MGR,1,2)=76 THEN '6666'
        WHEN SUBSTR(MGR,1,2)=77 THEN '7777'
        WHEN SUBSTR(MGR,1,2)=78 THEN '8888'
        ELSE TO_CHAR(MGR) 
    END AS CHG_MGR
FROM EMP;

--지정한 부서번호,부서명,사원이름 및 지정한 사원과 동일한 부서에서 근무하는 모든 사원을
--표시하도록 질의를 작성하고 부서번호는 department, 사원이름은 employee, 동일한
--부서에서 근무하는 사원은 colleague로 표시하시오.
--(부서번호, 사원이름,동료 순으로 오름차순 정렬)

SELECT D.DEPTNO AS department
    , D.DNAME
    , E.ENAME AS employee
    , E.DEPTNO 
    , A.ENAME AS colleague
FROM EMP E, DEPT D, EMP A
WHERE E.DEPTNO=D.DEPTNO
    AND A.DEPTNO=D.DEPTNO
    AND NOT E.ENAME=A.ENAME
ORDER BY department, employee, colleague;

SELECT E1.DEPTNO AS DEPARTMENT
    ,D.DNAME AS DEPARTMENTNAME
    ,E1.ENAME AS EMPLOYEE
    ,E2.DEPTNO
    ,E2.ENAME AS COLLEAGUE
FROM EMP E1, EMP E2, DEPT D
WHERE E1.DEPTNO=E2.DEPTNO
    AND E1.DEPTNO=D.DEPTNO
    AND E1.EMPNO<>E2.EMPNO
ORDER BY DEPARTMENT, EMPLOYEE, COLLEAGUE;

--FROM절 서브쿼리, GROUP BY
SELECT EMPLOYEE AS 사원명, COUNT(COLLEAGUE) AS 동료수
FROM(SELECT E1.DEPTNO AS DEPARTMENT
    ,D.DNAME AS DEPARTMENTNAME
    ,E1.ENAME AS EMPLOYEE
    ,E2.DEPTNO
    ,E2.ENAME AS COLLEAGUE
FROM EMP E1, EMP E2, DEPT D
WHERE E1.DEPTNO=E2.DEPTNO
    AND E1.DEPTNO=D.DEPTNO
    AND E1.EMPNO<>E2.EMPNO
ORDER BY DEPARTMENT, EMPLOYEE, COLLEAGUE
)
GROUP BY EMPLOYEE;


--P213 7장 Q1
SELECT DEPTNO
    , FLOOR(AVG(SAL)) AVG_SAL
    , MAX(SAL) MAX_SAL
    , MIN(SAL) MIN_SAL
    , COUNT(EMPNO) CNT
FROM EMP
GROUP BY DEPTNO;

SELECT NVL(TO_CHAR(DEPTNO), '부서없음')
    ,NVL(TRUNC(AVG(SAL)),0) AS AVG_SAL
    ,NVL(MAX(SAL),0) AS MAX_SAL
    ,NVL(MIN(SAL),0) AS MIN_SAL
    ,COUNT(*) AS CNT
FROM EMP
WHERE DEPTNO IS NOT NULL
GROUP BY DEPTNO
ORDER BY DEPTNO;

--Q2
SELECT JOB, COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(JOB)>=3;


SELECT JOB, COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(*)>=3;


--Q3
SELECT TO_CHAR(HIREDATE,'YYYY') AS HIRE_YEAR
    ,DEPTNO
    ,COUNT(HIREDATE) AS CNT
FROM EMP
GROUP BY HIREDATE;


SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR
    ,DEPTNO
    ,COUNT(*) AS CNT
FROM EMP
WHERE DEPTNO IS NOT NULL
GROUP BY  TO_CHAR(HIREDATE,'YYYY'), DEPTNO;

--Q4
SELECT NVL2(COMM,'O','X') AS EXIST_COMM
    , COUNT(*) AS CNT
FROM EMP
GROUP BY NVL2(COMM,'O','X');

SELECT NVL2(COMM,'O','X') AS EXIST_COMM
    ,COUNT(*) AS CNT
FROM EMP
GROUP BY NVL2(COMM,'O','X');

--Q5
SELECT DEPTNO
    ,TO_CHAR(HIREDATE,'YYYY') AS HIRE_YEAR
    ,COUNT(*) AS CNT
    ,MAX(SAL) AS MAX_SAL
    ,SUM(SAL) AS SUM_SAL
    ,AVG(SAL) AS AVG_SAL
FROM EMP
WHERE DEPTNO IS NOT NULL
GROUP BY ROLLUP(DEPTNO,TO_CHAR(HIREDATE,'YYYY'));

--P240 8장 Q1
SELECT E.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E, DEPT D
WHERE E.SAL>2000
    AND E.DEPTNO=D.DEPTNO
ORDER BY E.DEPTNO, E.SAL;

SELECT E.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E 
INNER JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE E.SAL>2000
ORDER BY E.DEPTNO, E.SAL;

--Q2
SELECT E.DEPTNO
    , D.DNAME
    , FLOOR(AVG(SAL)) AS AVG_SAL   
    , MAX(SAL) MAX_SAL
    , MIN(SAL) MIN_SAL
    , COUNT(*) CNT
FROM DEPT D , EMP E
WHERE E.DEPTNO=D.DEPTNO
GROUP BY E.DEPTNO, D.DNAME;

SELECT E.DEPTNO
    , D.DNAME
    , FLOOR(AVG(SAL)) AS AVG_SAL   
    , MAX(SAL) MAX_SAL
    , MIN(SAL) MIN_SAL
    , COUNT(*) CNT
FROM DEPT D 
JOIN EMP E ON E.DEPTNO=D.DEPTNO
GROUP BY E.DEPTNO, D.DNAME;


--Q3
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E , DEPT D
WHERE E.DEPTNO(+)=D.DEPTNO
ORDER BY D.DEPTNO, D.DNAME;

SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
FROM EMP E 
RIGHT OUTER JOIN DEPT D ON E.DEPTNO=D.DEPTNO
ORDER BY D.DEPTNO, D.DNAME;


--Q4
SELECT D.DEPTNO
    ,D.DNAME, E1.EMPNO, E1.ENAME
    ,NVL(TO_CHAR(E1.MGR),' ') AS MGR
    ,E1.SAL
    ,D.DEPTNO
    ,S.LOSAL, S.HISAL, S.GRADE
    ,NVL(TO_CHAR(E2.EMPNO),' ') AS MGR_EMPNO
    ,NVL(TO_CHAR(E2.ENAME),' ') AS MGR_ENAME
FROM EMP E1, EMP E2, DEPT D, SALGRADE S
WHERE E1.DEPTNO(+)=D.DEPTNO 
    AND E1.MGR=E2.EMPNO(+)
    AND E1.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+)
ORDER BY D.DEPTNO, E1.EMPNO;

SELECT D.DEPTNO AS DEPTNO
    ,D.DNAME, E1.EMPNO, E1.ENAME
    ,NVL(TO_CHAR(E1.MGR),' ') AS MGR
    ,E1.SAL
    ,D.DEPTNO
    ,S.LOSAL, S.HISAL, S.GRADE
    ,NVL(TO_CHAR(E2.EMPNO),' ') AS MGR_EMPNO
    ,NVL(TO_CHAR(E2.ENAME),' ') AS MGR_ENAME
FROM EMP E1
RIGHT OUTER JOIN DEPT D ON E1.DEPTNO=D.DEPTNO
LEFT OUTER JOIN EMP E2 ON E1.MGR=E2.EMPNO
LEFT OUTER JOIN SALGRADE S ON E1.SAL>=S.LOSAL AND E1.SAL<=S.HISAL
--LEFT OUTER JOIN SALGRADE S ON E1.SAL<=S.HISAL
ORDER BY E1.DEPTNO, E1.EMPNO;


--P262 9장 Q1
SELECT E.JOB, E.EMPNO,E.ENAME, E.SAL, D.DEPTNO, D.DNAME 
FROM EMP E, DEPT D
WHERE JOB='SALESMAN'
    AND E.DEPTNO=D.DEPTNO
ORDER BY SAL DESC;

SELECT E.JOB, E.EMPNO,E.ENAME,E.SAL,E.DEPTNO,D.DNAME
FROM EMP E
JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE E.JOB=(SELECT E1.JOB FROM EMP E1 WHERE E1.ENAME='ALLEN');

--Q2
SELECT EMPNO, ENAME, DNAME
    , TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS HIREDATE
    , LOC, SAL, GRADE
FROM EMP , DEPT , SALGRADE
WHERE SAL>(SELECT AVG(SAL) FROM EMP)
    AND SAL BETWEEN SALGRADE.LOSAL AND SALGRADE.HISAL
    AND EMP.DEPTNO=DEPT.DEPTNO
ORDER BY SAL DESC, EMPNO;



SELECT E.EMPNO,E.ENAME,D.DNAME
    ,TO_CHAR(HIREDATE, 'YYYY-MM-DD') HIREDATE
    ,D.LOC, E.SAL, S.GRADE
FROM EMP E, DEPT D, SALGRADE S
WHERE E.DEPTNO=D.DEPTNO 
    AND E.SAL BETWEEN S.LOSAL AND S.HISAL
    AND SAL>(SELECT AVG(SAL) FROM EMP)
ORDER BY E.SAL DESC, E.EMPNO;

--Q3
SELECT E1.EMPNO, E1.ENAME, E1.JOB, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E1, DEPT D
WHERE E1.DEPTNO=D.DEPTNO
    AND E1.DEPTNO=10
    AND E1.JOB NOT IN(SELECT DISTINCT JOB
                     FROM EMP 
                     WHERE DEPTNO=30);


SELECT E.EMPNO, E.ENAME, E.JOB, E.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
    AND E.DEPTNO=10
    AND E.JOB NOT IN(SELECT DISTINCT E.JOB
                FROM EMP E
                WHERE E.DEPTNO=30);
--SELECT DISTINCT E.JOB
--FROM EMP E
--WHERE E.DEPTNO=30;

    
--Q4
SELECT EMP.EMPNO, EMP.ENAME, EMP.SAL, SALGRADE.GRADE
FROM  EMP, SALGRADE
WHERE EMP.SAL>(SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN')
    AND EMP.SAL BETWEEN SALGRADE.LOSAL AND SALGRADE.HISAL
ORDER BY EMPNO;
    
    
    
WITH
E AS (SELECT * FROM EMP),
S AS (SELECT * FROM SALGRADE)
SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
FROM E, S
WHERE E.SAL>(SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN')
    AND E.SAL BETWEEN S.LOSAL AND S.HISAL
ORDER BY EMPNO;

SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
FROM (SELECT * FROM EMP) E
    ,(SELECT * FROM SALGRADE) S
WHERE E.SAL>(SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN')
    AND E.SAL BETWEEN S.LOSAL AND S.HISAL
ORDER BY EMPNO;   
    

--다중행 함수 사용 X
SELECT E.EMPNO, E.ENAME,E.SAL,S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
    AND SAL>(SELECT MAX(SAL)
        FROM EMP
        WHERE JOB='SALESMAN')
ORDER BY E.EMPNO;

--다중행 함수 사용 O
SELECT E.EMPNO, E.ENAME,E.SAL,S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
    AND SAL>ALL(SELECT DISTINCT SAL
        FROM EMP
        WHERE JOB='SALESMAN')
ORDER BY E.EMPNO;
    









