/*CHAR FUNCTION
UPPER LOWER INITCAP 
*/

SELECT ENAME, UPPER(ENAME),LOWER(ENAME),INITCAP(ENAME)
FROM EMP;

SELECT *
FROM EMP
WHERE LOWER(ENAME)='james';

SELECT ENAME,LENGTH(ENAME),SAL,LENGTH(SAL),LENGTH('한글'),LENGTHB('한글')
FROM EMP;


SELECT JOB, SUBSTR(JOB,1,2),SUBSTR(JOB,3,2),SUBSTR(JOB,5)
    ,SUBSTR(JOB,-LENGTH(JOB)),SUBSTR(JOB,-LENGTH(JOB),2),SUBSTR(JOB,-3)
FROM EMP;


SELECT INSTR('HELLO, ORACLE!','L') INS1
    ,INSTR('HELLO, ORACLE!','L',5) INS2
    ,INSTR('HELLO, ORACLE!','L',2,2) INS3
FROM DUAL;
SELECT JOB,INSTR(JOB,'A',1,2)
FROM EMP
WHERE INSTR(JOB,'A')>0;

SELECT JOB,INSTR(JOB,'A',1,2)
FROM EMP
WHERE JOB LIKE '%A%';

SELECT '010-1234-4567' AS ORGIN
    ,REPLACE('010-1234-4567','-','-') AS RE1
    ,REPLACE('010-1234-4567','-') AS RE2
FROM DUAL;

SELECT 'Oracle'
    ,LPAD('Oracle',10,'#')AS lpad1
    ,RPAD('Oracle',10,'#')AS rpad1
    ,LPAD('Oracle',10)AS lpad2
    ,RPAD('Oracle',10)AS rpad2
FROM DUAL;

SELECT '800101-1122334' AS ORI
    ,RPAD(SUBSTR('800101-1122334',1,7),14,'*') AS BLOCK
    ,CONCAT(SUBSTR('800101-1122334',1,7),'********') AS CON
    ,'SDAFASD'||'ASDFASD'||'ASDFASDF'||'ASDFASDF' AS EN
FROM DUAL;
    
SELECT '[' || TRIM('     Oracle    ') || ']' AS TRIM,
    '[' || TRIM(LEADING FROM '   Oracle   ') || ']' AS TRIM_LEADING,
    '[' || TRIM(TRAILING FROM '   Oracle    ') || ']' AS TRIM_TRAILING,
    '[' || TRIM(BOTH FROM '   Oracle    ') || ']' AS BOTH
FROM DUAL; 
    
SELECT '[' || TRIM('^' FROM '^^   ^Ora cle^   ^^') || ']' AS TRIM,
    '[' || TRIM(LEADING '^' FROM '^^  ^Ora cle^ ^^') || ']' AS TRIM_LEADING,
    '[' || TRIM(TRAILING  '^' FROM '^^  ^Ora cle^   ^^') || ']' AS TRIM_TRAILING,
    '[' || TRIM(BOTH '^' FROM '^^  ^Ora cle^    ^^') || ']' AS BOTH
FROM DUAL; 
    
SELECT '[' || TRIM('   ^Oracle^   ') || ']' AS TRIM,
    '[' || LTRIM(' ^Ora cle^ ') || ']' AS LTRIM,
    '[' || LTRIM('<^Ora cle^>', '^<') || ']' AS LTRIM_2,
    '[' || RTRIM('  ^Ora cle^    ') || ']' AS RTRIM,
    '[' || RTRIM('<^Ora cle^>', '>^') || ']' AS RTRIM_2
FROM DUAL;     
    
/*NUMBER FUNCTION*/
SELECT ROUND(1234.5678) AS ROUND,
    ROUND(1234.5678, 0) AS ROUND_0,
    ROUND(1234.5678, 1) AS ROUND_1,
    ROUND(1234.5678, 2) AS ROUND_2,
    ROUND(1234.5678, -1) AS ROUND_MINUS1,
    ROUND(1234.5678, -2) AS ROUND_MINUS2
FROM DUAL;  

SELECT TRUNC(1234.5678) AS TRUNC,
    TRUNC(1234.5678, 0) AS TRUNC,
    TRUNC(1234.5678, 1) AS TRUNC,
    TRUNC(1234.5678, 2) AS TRUNC,
    TRUNC(1234.5678, -1) AS TRUNC_MINUS1,
    TRUNC(1234.5678, -2) AS TRUNC_MINUS2
FROM DUAL; 
    
SELECT CEIL(3.14),
    FLOOR(3.14),
    CEIL(-3.14),
    FLOOR(-3.14)
FROM DUAL;

--나머지 (자바%와 같음)
SELECT MOD(15, 6),
    MOD(10, 2),
    MOD(11, 2)
    FROM DUAL;
    
/*DATE FUNCTION*/
SELECT SYSDATE AS NOW,
    SYSDATE-1 AS YESTERDAY,
    SYSDATE+1 AS TOMORROW,
    (SELECT HIREDATE FROM EMP WHERE EMPNO=7934)
    -(SELECT HIREDATE FROM EMP WHERE EMPNO=7902) AS DIFF
FROM DUAL;

SELECT SYSDATE,
    ADD_MONTHS(SYSDATE, 3)
FROM DUAL;

SELECT EMPNO, ENAME, HIREDATE, SYSDATE,
    MONTHS_BETWEEN(HIREDATE, SYSDATE) AS MONTHS1,
    MONTHS_BETWEEN(SYSDATE, HIREDATE) AS MONTHS2,
    TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)) AS MONTHS3
FROM EMP;
    
SELECT SYSDATE,
    NEXT_DAY(SYSDATE, '월요일'),
    LAST_DAY(SYSDATE)
FROM DUAL;

/*TYPE CONVERSION*/
SELECT EMPNO, ENAME
    ,EMPNO + '500'
    ,EMPNO + 'ABCD'
FROM EMP;

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 현재날짜시간
FROM DUAL;

SELECT SYSDATE,
    TO_CHAR(SYSDATE, 'MM') AS MM,
    TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = KOREAN') AS MON_KOR,
    TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = ENGLISH') AS MON_EN
 FROM DUAL;
    
/*9숫자 한자리 0 빈자리에 채움 L 그지역 단위*/
SELECT SAL,
    TO_CHAR(SAL, '$999,999') AS SAL_$,
    TO_CHAR(SAL, 'L999,999') AS SAL_L,
    TO_CHAR(SAL, '999,999.00') AS SAL_1,
    TO_CHAR(SAL, '000,999,999.00') AS SAL_2,
    TO_CHAR(SAL, '000999999.99') AS SAL_3,
    TO_CHAR(SAL, '999,999,00') AS SAL_4
 FROM EMP;

SELECT 1300-'1500'
    ,'1300'+1500
    ,'1,300'+'1,500'
FROM DUAL;

SELECT TO_NUMBER('1,300', '999,999') - TO_NUMBER('1,500', '999.999')
FROM DUAL;

SELECT *
FROM EMP
WHERE HIREDATE >TO_DATE('1981/06/01', 'YYY/MM/DD');

/*NULL FUNCTION*/
SELECT EMPNO, ENAME, SAL, COMM, SAL+COMM,
    NVL(COMM,0),
    SAL+NVL(COMM,0),
    nvl2(COMM, 'O', 'X'), --NULL이면 뒤쪽 값이 오고 아니면 앞에 값
    NVL2(COMM, SAL*12+COMM, SAL*12) 
FROM EMP;

/*CONDITION FUNCTION */
SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB,
        'MANAGER', SAL*1.1,
        'SALESMAN', SAL*1.05,
        'ANALYST', SAL,
        SAL*1.03) AS UPSAL
FROM EMP;

SELECT EMPNO, ENAME, JOB, SAL,
    CASE 
        WHEN JOB='MANAGER' THEN SAL*1.1
        WHEN JOB='SALESMAN' THEN SAL*1.5
        WHEN JOB='ANALYST' THEN SAL
        ELSE SAL*1.03
    END AS UPSAL
    ,CASE
        WHEN COMM IS NULL THEN '해당사항 없음'
        WHEN COMM=0 THEN '수당없음'
        WHEN COMM>0 THEN '수당:'||COMM
        END AS COMM_TEXT
FROM EMP;
    
--Q1    
SELECT EMPNO
    ,RPAD(SUBSTR(EMPNO,1,2),LENGTH(EMPNO),'*') AS MASKING_EMPNO
    ,ENAME 
    ,RPAD(SUBSTR(ENAME,1,1),LENGTH(ENAME),'*') AS MASKING_ENAME 
FROM EMP
WHERE LENGTH(ENAME)>=5 
    AND LENGTH(ENAME)<6;
  
--Q2  
SELECT EMPNO, ENAME, SAL
    , TRUNC((SAL/21.5),2) AS DAY_PAY
    , ROUND(((SAL/21.5)/8),1) AS TIME_PAY
FROM EMP;

--Q3
SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD') AS HIREDATE
    ,TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3), '월요일'),'YYYY-MM-DD') AS R_JOB,
    CASE 
        WHEN COMM IS NULL THEN 'N/A'
--      WHEN COMM>0 THEN  ''||COMM
        WHEN COMM>0 THEN  TO_CHAR(COMM)
        END AS COMM
FROM EMP;

--Q4
--SELECT EMPNO, ENAME,
--    CASE
--        WHEN MGR IS NULL THEN ' '
--        ELSE TO_CHAR(MGR)
--        END AS MGR,
--    CASE
--        WHEN MGR IS NULL THEN 0000
--        WHEN SUBSTR(MGR,1,2)=75 THEN 5555
--        WHEN SUBSTR(MGR,1,2)=76 THEN 6666
--        WHEN SUBSTR(MGR,1,2)=77 THEN 7777
--        WHEN SUBSTR(MGR,1,2)=78 THEN 8888
--    ELSE MGR
--    END AS CHG_MGR
--FROM EMP;

SELECT EMPNO, ENAME,
    CASE
        WHEN MGR IS NULL THEN ' '
        ELSE TO_CHAR(MGR)
        END AS MGR,
    CASE
        WHEN MGR IS NULL THEN '0000'
        WHEN MGR LIKE '75%' THEN '5555'
        WHEN MGR LIKE '76%' THEN '6666'
        WHEN MGR LIKE '77%' THEN '7777'
        WHEN MGR LIKE '78%' THEN '8888'
    ELSE ''||MGR
    END AS CHG_MGR
FROM EMP;




--지정한 부서번호,부서명,사원이름 및 지정한 사원과 동일한 부서에서 근무하는 모든 사원을
--표시하도록 질의를 작성하고 부서번호는 department, 사원이름은 employee, 동일한
--부서에서 근무하는 사원은 colleague로 표시하시오.
--(부서번호, 사원이름,동료 순으로 오름차순 정렬)


--SELECT D.DEPTNO AS department
--    ,D.DNAME AS DPARTMENT
--    ,E.ENAME AS employee
--    ,E.DEPTNO AS DEPTNO
--    ,colleague
--FROM(SELECT E.ENAME AS colleague
--        ,E.SAL AS SALARY
--    FROM EMP E, DEPT D
--    WHERE E.DEPTNO=D.DEPTNO
--    AND D.DNAME='SALES')
--WHERE E.JOB='CLERK'
--ORDER BY department, employee, colleague;

SELECT B.DEPTNO AS department,
    B.DNAME,
    A.ENAME AS employee,
    A.DEPTNO,
    C.ENAME AS colleague
   
FROM EMP A
    ,DEPT B
    ,EMP C  
    
WHERE  A.DEPTNO=B.DEPTNO
    AND A.DEPTNO=C.DEPTNO
    AND NOT A.ENAME=C.ENAME
    
ORDER BY department, employee, colleague;


--SELECT E.DEPTNO AS DEPARTMENT,
--        D.DNAME AS DPARTMENT,
--        E.ENAME AS EMPLOYEE,
--        C.DEPTNO AS DEPTNO,
--        C.ENAME AS COLLEAGUE
--        
--FROM EMP E,
--        DEPT D,
--        EMP C
--WHERE E.DEPTNO=D.DEPTNO AND E.DEPTNO=C.DEPTNO AND NOT E.ENAME=C.ENAME
--ORDER BY DEPARTMENT,EMPLOYEE,COLLEAGUE;







